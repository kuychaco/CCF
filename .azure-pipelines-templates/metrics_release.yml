jobs:
- job: MetricsRelease # TODO: Rename this to push
  variables:
    skipComponentGovernanceDetection: true
  displayName: 'Metrics and Release'

  ${{ insert }}: ${{ parameters.env }}

  steps:
    - checkout: self
      clean: true

    - script: ./cimetrics_env.sh python -m cimetrics.plot
      env:
        METRICS_MONGO_CONNECTION: $(METRICS_MONGO_CONNECTION)
      workingDirectory: tests
      displayName: 'Plot cimetrics'
      condition: eq(variables['Build.Reason'], 'PullRequest')

    - script: ./cimetrics_env.sh python -m cimetrics.github_pr
      env:
        GITHUB_TOKEN: $(GITHUB_TOKEN)
      workingDirectory: tests
      displayName: 'Post cimetrics graphs as PR comment'
      condition: eq(variables['Build.Reason'], 'PullRequest')

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: _cimetrics
        artifactName: cimetrics
      displayName: 'Publish cimetrics graphs as build artifact'
      condition: eq(variables['Build.Reason'], 'PullRequest')

    # TODO: Only run for release builds
    - download: current
      artifact: ccf_install.tar.gz

    - task: GitHubRelease@0
      inputs:
        gitHubConnection: ccf_release
        repositoryName: '$(Build.Repository.Name)'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: manual
        tag: 'test'
        assets: $(Build.ArtifactStagingDirectory)/*.tar.gz
        assetUploadMode: 'delete'
        isDraft: true
        isPreRelease: true
        addChangeLog: false
      displayName: 'GitHub release (create)'